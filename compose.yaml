version: "3.8"

#building all services here
services:


  #################################
  # Googlewrapper microservice
  #################################
  googlewrapper:
    build:
      context: ./
      dockerfile: google.Dockerfile
    image: chyeshaoxuan/googlewrapper:1.0
    restart: always
    
    ports:
     - "5000:5000"
    networks:
      - mynetwork
    extra_hosts:
      - "host.docker.internal:host-gateway"  
    # environment:
        
      


  ###############################################
  # ltawrapperlots
  ###############################################
  ltawrapper:
    build:
      context: ./
      dockerfile: lta.Dockerfile
    image: chyeshaoxuan/ltawrapper:1.0
    restart: always
    # environment:
    ports:
     - "5001:5001"
    networks:
      - mynetwork
    extra_hosts:
      - "host.docker.internal:host-gateway"

#ura wrapper service
  urawrapper:
    build:
      context: ./
      dockerfile: ura.Dockerfile
    image: chyeshaoxuan/urawrapper:1.0
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/ura_rates
    
    
    ports:
     - "5003:5003"
    networks:
      - mynetwork
    extra_hosts:
      - "host.docker.internal:host-gateway"
#search info complex microservice
  searchinfo:
    build:
      context: ./
      dockerfile: searchinfo.Dockerfile
    image: chyeshaoxuan/searchinfo:1.0
    restart: always
    depends_on:
      - urawrapper
      - ltawrapper
      - googlewrapper
    ports:
     - "5002:5002"
    networks:
      - mynetwork

    extra_hosts:
      - "host.docker.internal:host-gateway"

#session microservice
  session:
    build:
      context: ./
      dockerfile: session.Dockerfile
    image: chyeshaoxuan/session:1.0
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/session
    ports:
     - "5006:5006"
    networks:
      - mynetwork

    extra_hosts:
      - "host.docker.internal:host-gateway"

#user microservice
  user:
    build:
      context: ./
      dockerfile: user.Dockerfile
    image: chyeshaoxuan/user:1.0
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/user
    ports:
     - "5010:5010"
    networks:
      - mynetwork

    extra_hosts:
      - "host.docker.internal:host-gateway"
#docker networks

networks:
  mynetwork:
    driver: bridge
